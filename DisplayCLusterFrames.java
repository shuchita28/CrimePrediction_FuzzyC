/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package classificationcrime;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FileStatus;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;

/**
 *
 * @author Shuchita
 */
public class DisplayCLusterFrames extends javax.swing.JFrame {
String hitofuser="";
    /**
     * Creates new form DisplayCLusterFrames
     */
    public DisplayCLusterFrames() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Crime Wise Cluster");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Block Wise Cluster");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Datewise Cluster");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Lattitude Longitudewise Cluster");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setText("Total Count");

        jLabel2.setText("jLabel2");

        jButton5.setText("K means lattitude longitude cluster");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jLabel1)
                        .addGap(72, 72, 72)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(47, 47, 47)
                        .addComponent(jButton2)
                        .addGap(28, 28, 28)
                        .addComponent(jButton3)
                        .addGap(34, 34, 34)
                        .addComponent(jButton4)
                        .addGap(42, 42, 42)
                        .addComponent(jButton5)))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)))
                .addContainerGap(236, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        
            ArrayList<String> dataofuserItems=new ArrayList<String>();
         
	     try{
	    	 
	    	  String dataof="crime";
                hitofuser=dataof;
                    String arraysplit[]=dataof.split(",");
                      DefaultTableModel model = new DefaultTableModel();
                   for (int i = 0; i < arraysplit.length; i++) {
                model.addColumn(arraysplit[i]);
            }
		Configuration conf = new Configuration();
 	  conf.set("fs.defaultFS", "hdfs://localhost:9000");
 	  conf.set("mapred.job.tracker", "localhost:9001");
         FileSystem fs = FileSystem.get(conf);
         
       
         
         
         FileStatus[] status = fs.listStatus(new Path("hdfs://localhost:9000/crime/"+dataof));
         for (int i=0;i<status.length;i++){
                 BufferedReader br=new BufferedReader(new InputStreamReader(fs.open(status[i].getPath())));
                 String line;
//                 line=br.readLine();
                 
                 String filename=status[i].getPath().getName();
//                 System.out.println(filename);
                 dataofuserItems.add(filename);
                 
                 
                  model.addRow(new Object[]{filename}); 
                 
                 
           
         }
         //System.out.println("Total number of unique visitors= "+(status.length-2)); 
         
       //  jLabel1.setText("Total Number of unique visitors "+(status.length-2));
         
         
            
                     jTable1.setModel(model);
               jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
         
         for(String inputobtained:dataofuserItems)
         {
        	 
//        	 System.out.println(inputobtained);
         }
         
 }catch(Exception e){
         System.out.println("File not found");
 }
 
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try {
            // TODO add your handling code here:
            
            
            
            
            // TODO add your handling code here:
            int count=0;
            String modeldata[]="cik,accession,code,size,norefer,noagent".split(",");
            
            DefaultTableModel model1 = new DefaultTableModel();
            for (int i = 0; i < modeldata.length; i++) {
                model1.addColumn(modeldata[i]);
            }
            int row = jTable1.getSelectedRow();
            String table_click = (jTable1.getModel().getValueAt(row, 0).toString());
            
            
            String packagecalled=hitofuser;
            String filename=table_click;
            
            Configuration conf = new Configuration();
            conf.set("fs.defaultFS", "hdfs://localhost:9000");
            conf.set("mapred.job.tracker", "localhost:9001");
            FileSystem fs = FileSystem.get(conf);
            
            FileStatus[] status = fs.listStatus(new Path("hdfs://localhost:9000/crime/"+packagecalled));
            
            Path filereading=new Path("hdfs://localhost:9000/crime/"+packagecalled+"/"+filename);
            
            BufferedReader br=new BufferedReader(new InputStreamReader(fs.open(filereading)));
            
            
            
            
            
            
            String line;
//        line=br.readLine();
            
            //String filename=status[i].getPath().getName();
//        System.out.println(filename);
            
            while ((line=br.readLine()) != null){
                
//                System.out.println(line);
//                line=br.readLine();
                String uservalItems[]= line.split(",");
                
                model1.addRow(new Object[]{uservalItems[0],uservalItems[1],uservalItems[2],uservalItems[3],uservalItems[4],uservalItems[5]}); 
//            dataofuserItems.add(uservalItems[1]);
                count++;
                
            }
            jLabel2.setText(count+"");
//             dataset.addValue(1, "Trusted", ""+count);
            
            jTable2.setModel(model1);
            jTable2.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        } catch (IOException ex) {
            Logger.getLogger(DisplayCLusterFrames.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
          ArrayList<String> dataofuserItems=new ArrayList<String>();
         
	     try{
	    	 
	    	  String dataof="blockwise";
                hitofuser=dataof;
                    String arraysplit[]=dataof.split(",");
                      DefaultTableModel model = new DefaultTableModel();
                   for (int i = 0; i < arraysplit.length; i++) {
                model.addColumn(arraysplit[i]);
            }
		Configuration conf = new Configuration();
 	  conf.set("fs.defaultFS", "hdfs://localhost:9000");
 	  conf.set("mapred.job.tracker", "localhost:9001");
         FileSystem fs = FileSystem.get(conf);
         
       
         
         
         FileStatus[] status = fs.listStatus(new Path("hdfs://localhost:9000/crime/"+dataof));
         for (int i=0;i<status.length;i++){
                 BufferedReader br=new BufferedReader(new InputStreamReader(fs.open(status[i].getPath())));
                 String line;
//                 line=br.readLine();
                 
                 String filename=status[i].getPath().getName();
//                 System.out.println(filename);
                 dataofuserItems.add(filename);
                 
                 
                  model.addRow(new Object[]{filename}); 
                 
                 
           
         }
         //System.out.println("Total number of unique visitors= "+(status.length-2)); 
         
       //  jLabel1.setText("Total Number of unique visitors "+(status.length-2));
         
         
            
                     jTable1.setModel(model);
               jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
         
         for(String inputobtained:dataofuserItems)
         {
        	 
//        	 System.out.println(inputobtained);
         }
         
 }catch(Exception e){
         System.out.println("File not found");
 }
 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
          ArrayList<String> dataofuserItems=new ArrayList<String>();
         
	     try{
	    	 
	    	  String dataof="datewise";
                hitofuser=dataof;
                    String arraysplit[]=dataof.split(",");
                      DefaultTableModel model = new DefaultTableModel();
                   for (int i = 0; i < arraysplit.length; i++) {
                model.addColumn(arraysplit[i]);
            }
		Configuration conf = new Configuration();
 	  conf.set("fs.defaultFS", "hdfs://localhost:9000");
 	  conf.set("mapred.job.tracker", "localhost:9001");
         FileSystem fs = FileSystem.get(conf);
         
       
         
         
         FileStatus[] status = fs.listStatus(new Path("hdfs://localhost:9000/crime/"+dataof));
         for (int i=0;i<status.length;i++){
                 BufferedReader br=new BufferedReader(new InputStreamReader(fs.open(status[i].getPath())));
                 String line;
//                 line=br.readLine();
                 
                 String filename=status[i].getPath().getName();
//                 System.out.println(filename);
                 dataofuserItems.add(filename);
                 
                 
                  model.addRow(new Object[]{filename}); 
                 
                 
           
         }
         //System.out.println("Total number of unique visitors= "+(status.length-2)); 
         
       //  jLabel1.setText("Total Number of unique visitors "+(status.length-2));
         
         
            
                     jTable1.setModel(model);
               jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
         
         for(String inputobtained:dataofuserItems)
         {
        	 
//        	 System.out.println(inputobtained);
         }
         
 }catch(Exception e){
         System.out.println("File not found");
 }
 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
          ArrayList<String> dataofuserItems=new ArrayList<String>();
         
	     try{
	    	 
	    	  String dataof="lattitudelongitudewise";
                hitofuser=dataof;
                    String arraysplit[]=dataof.split(",");
                      DefaultTableModel model = new DefaultTableModel();
                   for (int i = 0; i < arraysplit.length; i++) {
                model.addColumn(arraysplit[i]);
            }
		Configuration conf = new Configuration();
 	  conf.set("fs.defaultFS", "hdfs://localhost:9000");
 	  conf.set("mapred.job.tracker", "localhost:9001");
         FileSystem fs = FileSystem.get(conf);
         
       
         
         
         FileStatus[] status = fs.listStatus(new Path("hdfs://localhost:9000/crime/"+dataof));
         for (int i=0;i<status.length;i++){
                 BufferedReader br=new BufferedReader(new InputStreamReader(fs.open(status[i].getPath())));
                 String line;
//                 line=br.readLine();
                 
                 String filename=status[i].getPath().getName();
//                 System.out.println(filename);
                 dataofuserItems.add(filename);
                 
                 
                  model.addRow(new Object[]{filename}); 
                 
                 
           
         }
         //System.out.println("Total number of unique visitors= "+(status.length-2)); 
         
       //  jLabel1.setText("Total Number of unique visitors "+(status.length-2));
         
         
            
                     jTable1.setModel(model);
               jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
         
         for(String inputobtained:dataofuserItems)
         {
        	 
//        	 System.out.println(inputobtained);
         }
         
 }catch(Exception e){
         System.out.println("File not found");
 }
 
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
         new EKmeansGUI();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayCLusterFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayCLusterFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayCLusterFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayCLusterFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplayCLusterFrames().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
